DROP TABLE "USER" CASCADE CONSTRAINTS;
DROP TABLE "RENT" CASCADE CONSTRAINTS;
DROP TABLE "AREARENT" CASCADE CONSTRAINTS;
DROP TABLE "AREA" CASCADE CONSTRAINTS;
DROP TABLE "ARTICLE" CASCADE CONSTRAINTS;
DROP TABLE "ARTICLERENT" CASCADE CONSTRAINTS;
DROP TABLE "BOATRENT" CASCADE CONSTRAINTS;
DROP TABLE "BOAT" CASCADE CONSTRAINTS;
DROP TABLE "BOATTYPE" CASCADE CONSTRAINTS;

-- USER

CREATE TABLE "USER" (
  ID INT PRIMARY KEY,
  NAME NVARCHAR2(256) NOT NULL,
  EMAIL NVARCHAR2(256) NOT NULL UNIQUE CHECK(REGEXP_LIKE (EMAIL,'^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,4}$')),
  PASSWORD NVARCHAR2(512) NOT NULL,
  ADMIN INT DEFAULT 0 NOT NULL 
);

DROP SEQUENCE "USER_SEQ";
CREATE SEQUENCE "USER_SEQ";
CREATE OR REPLACE TRIGGER "USER_AI"
BEFORE INSERT ON "USER"
FOR EACH ROW
BEGIN
  SELECT "USER_SEQ".NEXTVAL
  INTO :NEW.ID
  FROM DUAL;
END;
/

-- RENT

CREATE TABLE "RENT" (
  ID INT PRIMARY KEY,
  BEGIN DATE NOT NULL,
  END DATE NOT NULL,
  RENTER INT REFERENCES "USER" (ID) NOT NULL
);

DROP SEQUENCE "RENT_SEQ";
CREATE SEQUENCE "RENT_SEQ";
CREATE OR REPLACE TRIGGER "RENT_AI"
BEFORE INSERT ON "RENT"
FOR EACH ROW
BEGIN
  SELECT "RENT_SEQ".NEXTVAL
  INTO :NEW.ID
  FROM DUAL;
END;
/

-- AREA

CREATE TABLE "AREA" (
  ID INT PRIMARY KEY,
  NAME NVARCHAR2(256) NOT NULL,
  COST INT NOT NULL
);

DROP SEQUENCE "AREA_SEQ";
CREATE SEQUENCE "AREA_SEQ";
CREATE OR REPLACE TRIGGER "AREA_AI"
BEFORE INSERT ON "AREA"
FOR EACH ROW
BEGIN
  SELECT "AREA_SEQ".NEXTVAL
  INTO :NEW.ID
  FROM DUAL;
END;
/

-- AREARENT

CREATE TABLE "AREARENT" (
  ID INT PRIMARY KEY,
  RENT INT REFERENCES "RENT" (ID) NOT NULL,
  AREA INT REFERENCES "AREA" (ID) NOT NULL,
  COST INT NOT NULL
);

DROP SEQUENCE "AREARENT_SEQ";
CREATE SEQUENCE "AREARENT_SEQ";
CREATE OR REPLACE TRIGGER "AREARENT_AI"
BEFORE INSERT ON "AREARENT"
FOR EACH ROW
BEGIN
  SELECT "AREARENT_SEQ".NEXTVAL
  INTO :NEW.ID
  FROM DUAL;
END;
/

-- ARTICLE

CREATE TABLE "ARTICLE" (
  ID INT PRIMARY KEY,
  NAME NVARCHAR2(256) NOT NULL,
  COST INT NOT NULL
);

DROP SEQUENCE "ARTICLE_SEQ";
CREATE SEQUENCE "ARTICLE_SEQ";
CREATE OR REPLACE TRIGGER "ARTICLE_AI"
BEFORE INSERT ON "ARTICLE"
FOR EACH ROW
BEGIN
  SELECT "ARTICLE_SEQ".NEXTVAL
  INTO :NEW.ID
  FROM DUAL;
END;
/

-- ARTICLERENT

CREATE TABLE "ARTICLERENT" (
  ID INT PRIMARY KEY,
  RENT INT REFERENCES "RENT" (ID) NOT NULL,
  ARTICLE INT REFERENCES "ARTICLE" (ID) NOT NULL,
  AMOUNT INT NOT NULL,
  COST INT NOT NULL
);

DROP SEQUENCE "ARTICLERENT_SEQ";
CREATE SEQUENCE "ARTICLERENT_SEQ";
CREATE OR REPLACE TRIGGER "ARTICLERENT_AI"
BEFORE INSERT ON "ARTICLERENT"
FOR EACH ROW
BEGIN
  SELECT "ARTICLERENT_SEQ".NEXTVAL
  INTO :NEW.ID
  FROM DUAL;
END;
/

-- BOATTYPE

CREATE TABLE "BOATTYPE" (
  ID INT PRIMARY KEY,
  NAME NVARCHAR2(256) NOT NULL,
  MOTORIZED INT NOT NULL,
  FUEL_CAPACITY INT,
  FUEL_ECONOMY NUMBER,
  COST INT NOT NULL
);

DROP SEQUENCE "BOATTYPE_SEQ";
CREATE SEQUENCE "BOATTYPE_SEQ";
CREATE OR REPLACE TRIGGER "BOATTYPE_AI"
BEFORE INSERT ON "BOATTYPE"
FOR EACH ROW
BEGIN
  SELECT "BOATTYPE_SEQ".NEXTVAL
  INTO :NEW.ID
  FROM DUAL;
END;
/

-- BOAT

CREATE TABLE "BOAT" (
  ID INT PRIMARY KEY,
  NAME NVARCHAR2(256) NOT NULL UNIQUE,
  TYPE INT REFERENCES "BOATTYPE" (ID) NOT NULL
);

DROP SEQUENCE "BOAT_SEQ";
CREATE SEQUENCE "BOAT_SEQ";
CREATE OR REPLACE TRIGGER "BOAT_AI"
BEFORE INSERT ON "BOAT"
FOR EACH ROW
BEGIN
  SELECT "BOAT_SEQ".NEXTVAL
  INTO :NEW.ID
  FROM DUAL;
END;
/

-- BOATRENT

CREATE TABLE "BOATRENT" (
  ID INT PRIMARY KEY,
  RENT INT REFERENCES "RENT" (ID) NOT NULL,
  BOAT INT REFERENCES "BOAT" (ID) NOT NULL,
  COST INT NOT NULL
);

DROP SEQUENCE "BOATRENT_SEQ";
CREATE SEQUENCE "BOATRENT_SEQ";
CREATE OR REPLACE TRIGGER "BOATRENT_AI"
BEFORE INSERT ON "BOATRENT"
FOR EACH ROW
BEGIN
  SELECT "BOATRENT_SEQ".NEXTVAL
  INTO :NEW.ID
  FROM DUAL;
END;
/

INSERT INTO "USER" (NAME, EMAIL, PASSWORD, ADMIN) VALUES ('Testert', 'test@example.org', 'test', 0);

INSERT INTO "ARTICLE" (NAME, COST) VALUES ('Zwemvest', 125);
INSERT INTO "ARTICLE" (NAME, COST) VALUES ('Peddel', 125);

INSERT INTO "BOATTYPE" (NAME, MOTORIZED, COST) VALUES ('Kano', 0, 1000);
INSERT INTO "BOATTYPE" (NAME, MOTORIZED, COST) VALUES ('Valk', 0, 1000);
INSERT INTO "BOATTYPE" (NAME, MOTORIZED, COST) VALUES ('Laser', 0, 1000);
INSERT INTO "BOATTYPE" (NAME, MOTORIZED, FUEL_CAPACITY, FUEL_ECONOMY, COST) VALUES ('Kruiser', 1, 10, 15, 1500);

INSERT INTO "BOAT" (NAME, TYPE) VALUES ('KANO1', 1);
INSERT INTO "BOAT" (NAME, TYPE) VALUES ('KANO2', 1);
INSERT INTO "BOAT" (NAME, TYPE) VALUES ('VALK1', 2);
INSERT INTO "BOAT" (NAME, TYPE) VALUES ('VALK2', 2);
INSERT INTO "BOAT" (NAME, TYPE) VALUES ('LASER1', 3);
INSERT INTO "BOAT" (NAME, TYPE) VALUES ('LASER2', 3);
INSERT INTO "BOAT" (NAME, TYPE) VALUES ('KRUISER1', 4);
INSERT INTO "BOAT" (NAME, TYPE) VALUES ('KRUISER2', 4);

INSERT INTO "AREA" (NAME, COST) VALUES ('Noordzee', 200);
INSERT INTO "AREA" (NAME, COST) VALUES ('IJsselmeer', 200);